// to specify your own, either edit this file, or copy/paste to open_url.sublime-settings file in your User folder
// if there is an open_url.sublime-settings in the User folder, Sublime Text merges those settings with these
{
  // delimiters for expanding selection, these are markdown friendly
  "delimiters": " \t\n\r\"'`,*<>[](){}",

  // if these delimiting characters are seen at the end of the URL, they are removed, e.g. sublimetext.com.; becomes sublimetext.com
  "trailing_delimiters": ";.:",

  // the browser that Open URL uses to open new tabs
  // it can be an empty string, or a string [from this list](https://docs.python.org/3.3/library/webbrowser.html)
  "web_browser": "",

  // if URL is neither a local file nor a web URL, pass it to a web searcher
  "web_searchers": [
    { "label": "google search", "url": "http://google.com/search?q=", "encoding": "utf-8" },
  ],

  // pass file that matches regex "pattern" to shell commands, run in a subprocess
  "file_custom_commands": [
    // { "label": "open with default application", "pattern": "\\.pdf$|\\.png$", "commands": [ "open" ] },
  ],

  // pass a folder to any of these shell commands, run in a subprocess
  "folder_custom_commands": [
    // { "label": "open in terminal", "commands": [ "open", "-a", "/Applications/iTerm.app" ] },
  ],

  // pass other URL that matches regex "pattern" to shell commands, run in a subprocess
  "other_custom_commands": [
    // { "label": "open with transmit", "pattern": "^ftp://", "commands": [ "open", "-a", "/Applications/Transmit.app" ] },
  ],

  // set to false if you want to disable the following commands: ('run', 'new sublime window', 'system open')
  "file_extra_commands": true,

  // set to false if you want to disable the following commands: ('add to sublime project', 'new sublime window')
  "folder_extra_commands": true,

  // action=run,edit,menu: platform-specific/file-extension-specific shortcuts for working with files
  // os is one of {mac, win, lnx, any, psx}
  // on mac, you can specify "app" open with a specific application, like "open -a <app> <file>"
  // on any, you can specify "openwith" (not to combine with "app") which passes the file to the openwith command
  "autoactions": [
    // { "os": "win", "endswith": [".exe", ".com"], "action": "run" },
    // { "os": "win", "endswith": [".bat", ".cmd"], "action": "menu", "terminal": true, "pause": true },
    // { "os": "any", "endswith": [".txt", ".md"], "action": "edit" },
  ],
}
